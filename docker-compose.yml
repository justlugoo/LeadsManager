# docker-compose.yml
services:
  backend:
    build:
      context: ./backend-lm
      dockerfile: Dockerfile
    container_name: leadsmanager-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend-lm/data:/app/data  # Para persistir la base de datos SQLite
    environment:
      - ENVIRONMENT=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - leadsmanager-network

  frontend:
    build:
      context: ./frontend-lm
      dockerfile: Dockerfile
    container_name: leadsmanager-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - leadsmanager-network

  # Opcional: Base de datos PostgreSQL para producci√≥n
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: leadsmanager-postgres
  #   environment:
  #     POSTGRES_DB: leadsmanager
  #     POSTGRES_USER: leadsmanager
  #     POSTGRES_PASSWORD: your_secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - leadsmanager-network

networks:
  leadsmanager-network:
    driver: bridge

volumes:
  # postgres_data:  # Descomenta si usas PostgreSQL
  sqlite_data: